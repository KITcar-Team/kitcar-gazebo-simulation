"""
This file contains functions used to calculate the camera calibration

Author: Konstantin Ditschuneit
Date: 20.09.2019
"""
import math
import numpy as np
import pdb

def fov(f, res):
    """ Returns the field of view given a focal length f and a resolution p

    """
    return math.atan(res/2/f)*2

def A_matrix(f_x,f_y, c):
    """ Returns the intrinsic calibration matrix A given focal lengths and Center in image

    """
    # Center in image - center of captured camera image expressed in cropped image coordinates
    return np.matrix([[f_x, 0, c[0]],[0, f_y, c[1]],[ 0, 0 ,1] ])

def R_matrix(angle):
    """ Calculate rotation matrix (valid only for dr_drift)"""
    s = math.sin(angle)
    c = math.cos(angle)
    return np.matrix([[0, -1, 0],[ -s, 0, -c],[c, 0 ,-s ]])

def M_matrix(cam_angle, t_vehicle):
    """ 
    Calculates M matrix 
    """

    # Rotation matrix
    R = R_matrix(cam_angle)

    t_cam = R@t_vehicle*1000

    return np.append(R,-np.transpose(t_cam),1)

def create_camera_yaml(cam_data):
    """ 
    Returns the complete text for the camera yaml file
    """

    f = cam_data['focal_length']
    # Resolution of the camera
    cam_res = np.array([cam_data['capture']['width'],cam_data['capture']['height']])
    # Resolution output by camera / cam crops out pixels from top of the view internally
    out_res = np.array([cam_data['output']['width'],cam_data['output']['height']]) 
    # Camera mount angle
    cam_angle = cam_data['angle']
    # Camera position in vehicle coordinate system
    cam_translation = np.array(cam_data['translation'])

    # Center in image - center of captured camera image expressed in cropped image coordinates
    c = out_res-cam_res/2
    # A matrix / intrinsic calibration
    A = A_matrix(f,f,c) # In this case using the A matrix is overkill
    # M matrix / extrinsic calibration
    M = M_matrix(cam_angle,cam_translation)

    return """ 
# Automatically generated by camera_calibration.py
# Author: Konstantin Ditschuneit

# Parameters calculated using given horizontal fov and width of image
focal_length_x: {fx}
focal_length_y: {fy}
optical_center_x: {cx}
optical_center_y: {cy}
# y center is shifted because the actual camera used in dr_drift
# captures images with a height of 1024 px but pre-crops to 650 px

# Coordsys in back axle (vehicle coordsys)   
r11: {r11}
r12: {r12}
r13: {r13}
r21: {r21}
r22: {r22}
r23: {r23}
r31: {r31}
r32: {r32}
r33: {r33}
t1:  {t1}
t2:  {t2}
t3:  {t3}

        """.format(fx=A[0,0],fy=A[1,1],cx=A[0,2],cy=A[1,2],
        r11=M[0,0],r12=M[0,1],r13=M[0,2],t1=M[0,3],
        r21=M[1,0],r22=M[1,1],r23=M[1,2],t2=M[1,3],
        r31=M[2,0],r32=M[2,1],r33=M[2,2],t3=M[2,3])

