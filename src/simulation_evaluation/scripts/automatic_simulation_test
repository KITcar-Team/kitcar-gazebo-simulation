#!/usr/bin/env python3
import sys
import unittest
import rospy

from evaluation.drive_logger import DriveState

from std_msgs.msg import Int8

PKG = 'simulation_evaluation'

import pdb

class AutomaticSimulationTest(unittest.TestCase):    

    def state_cb(self,msg):

        print(f'Updating test state: {msg.data}')
        self.state = DriveState(msg.data)

    def test_automatic_state(self):
        rospy.loginfo('Starting test_automatic_state')
        print('Starting test_automatic_state')
        rospy.init_node('test_automatic_state')

        self.state = DriveState.IN_PROGRESS

        rospy.Subscriber('/simulation/evaluation/state',Int8,callback=self.state_cb)
        
        while not rospy.core.is_shutdown():
            if self.state != DriveState.IN_PROGRESS:
                break
            rospy.rostime.wallsleep(0.5)

        self.assertEqual(self.state.value,DriveState.COMPLETED.value)


print(__name__)
if __name__ == '__main__':
    print('main')
    import rosunit
    rosunit.unitrun(PKG,'test_automatic_state',AutomaticSimulationTest)
