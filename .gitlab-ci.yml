image: kitcar/docker-gazebo-build:latest

variables:
  CCACHE_DIR: "ccache"
  GIT_STRATEGY: clone
  PIP3_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ccache
    - .cache/pip
    - venv/

before_script:
  #Run the container start script to enable the pulseaudio & xserver
  - bash /start_script.sh
  #Install python packages
  - mkdir -p .pip
  - python3 -V               # Print out python version for debugging
  - pip3 install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip3 install -r requirements.txt
  - mkdir -p ccache

  #Move kitcar-ros to $KITCAR_REPO_PATH
  - export KITCAR_REPO_PATH=/builds/kitcar/
  - if [ -d "kitcar-ros" ]; then
  - mv kitcar-ros $KITCAR_REPO_PATH/kitcar-ros
  - source $KITCAR_REPO_PATH/kitcar-ros/init/bashrc || true
  - fi

  #Source init 
  - source init/bashrc || true

after_script:
  #Move kitcar-ros back into this folder (Necessary for artifacts!)
  - export KITCAR_REPO_PATH=/builds/kitcar/
  - if [ -d "$KITCAR_REPO_PATH/kitcar-ros" ]; then
  - mv $KITCAR_REPO_PATH/kitcar-ros kitcar-ros
  - fi



stages:
  - prebuild-test # Some tests are performed before building, to filter easy mistakes
  - build
  - test
  - deploy

######## PREBUILD STAGE #########
#Test basics before attempting to build!


# Test if dr_drift generation script works
test-dr_drift:
    stage: prebuild-test
    script: &prebuild-dr_drift
        - cd models/model_db/dr_drift
        - ./generate.sh
        #TODO: Also test if the calibration is actually correct.

test-utils:
  stage: prebuild-test
  script: &prebuild-test-utils
    - python3 utils/geometry/module_test.py

test-road-generation:
  stage: prebuild-test
  script: &prebuild-generation
    - cd models/env_db
    - ./generate.sh -r default-road
    - ./generate.sh -r curves


# Simply test if the documentation can be generated.
test-documentation-generation:
  stage: prebuild-test
  script:
    - cd docs
    - make html

######## BUILD STAGE ########
# buikd kitcar-ros and simulation
build:
    stage: build
    script: &build-all
        - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@git.kitcar-team.de/kitcar/kitcar-ros.git $KITCAR_REPO_PATH/kitcar-ros
        - cd $KITCAR_REPO_PATH/kitcar-ros
        - git submodule sync --recursive
        - git submodule update --init --recursive
        - git clean -d -f -f KITcar_external/src
        #External
        - echo "CCACHE_DIR=$CCACHE_DIR"
        - cd $KITCAR_REPO_PATH/kitcar-ros/KITcar_external
        - catkin_make #-DCMAKE_BUILD_TYPE=Coverage
        - source $KITCAR_REPO_PATH/kitcar-ros/KITcar_external/devel/setup.bash --extend
        #Brain
        - cd $KITCAR_REPO_PATH/kitcar-ros/KITcar_brain
        - catkin_make  #-DCMAKE_BUILD_TYPE=Coverage
        - source $KITCAR_REPO_PATH/kitcar-ros/KITcar_brain/devel/setup.bash --extend
        - cd  $KITCAR_REPO_PATH/kitcar-ros/KITcar_debugger
        - catkin_make #-DCMAKE_BUILD_TYPE=Coverage
        - cd  $KITCAR_REPO_PATH/kitcar-gazebo-simulation
        - catkin_make
    artifacts:
        paths:
        - kitcar-ros
        - devel
        - build
        expire_in: 2 hrs
   

test-start-process:
    stage: test
    script: &test-start
        #Perform sourcing
        - source $KITCAR_REPO_PATH/kitcar-ros/KITcar_external/devel/setup.bash 
        - source $KITCAR_REPO_PATH/kitcar-ros/KITcar_brain/devel/setup.bash --extend
        - source $KITCAR_REPO_PATH/kitcar-ros/KITcar_debugger/devel/setup.bash --extend
        - source devel/setup.bash --extend
        
        # Generate road
        - cd models/env_db
        - ./generate.sh -r curves

        # Run test
        - rostest gazebo_simulation start_road.test

deploy-sphinx-documentation:
  stage: deploy
  script:
    - cd docs
    - make html
  artifacts:
    paths:
      - docs/_build/html/*
    expire_in: 1 day
  only:
    - master
    
