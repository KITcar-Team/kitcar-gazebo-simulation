image: git.kitcar-team.de:4567/kitcar/kitcar-gazebo-simulation/ci:focal

variables:
  GIT_STRATEGY: clone
  GIT_LFS_SKIP_SMUDGE: "1"  #  Don't pull Git LFS
  CAR_NAME: dr_drift
  KITCAR_REPO_PATH: /builds/kitcar
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

before_script:
  # Run the container start script to enable the pulseaudio & xserver
  - bash init/docker_start_script.sh

  # Print out python version for debugging
  - python3 -V

  # Install packages and requirements
  - yes 1 | ./init/init.sh || true

  - source init/bashrc || true

stages:
  - build
  - test
  - deploy


######## BUILD STAGE ########
# buikd kitcar-ros and simulation
build-code:
  stage: build
  script: &build-all
    - cd  simulation
    - catkin_make
  artifacts:
    paths:
      - simulation/devel
      - simulation/build
    expire_in: 2 day

# Allow to manually build the ci image
# E.g. to test if the Dockerfile is still working
build-ci-image:
  stage: build
  image: docker:19.03.11
  when: manual
  tags:
    - docker
  services:
    - docker:19.03.11-dind
  before_script: []
  script:
    - docker --version
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    # Test building the ci image
    - cd simulation/docker/ci
    - /bin/sh build.sh $CI_REGISTRY
    # Test building the default image
    - cd ../default
    - /bin/sh build.sh $CI_REGISTRY ci $KITCAR_REPO_PATH
    # Test building the kitcar_ros_ci image
    - cd ../kitcar_ros_ci
    - /bin/sh build.sh $CI_REGISTRY

######## TEST STAGE #########

# Run module test in utils packages
test-python-packages:
  stage: test
  script: &test-utils
    - python3 -m simulation.utils.geometry.test
    - python3 simulation/utils/ros_base/test/parameter_object_test.py

    - python3 -m simulation.utils.road.sections.test

    - python3 -m simulation.src.simulation_evaluation.src.speaker.speakers.test
    - python3 -m simulation.src.simulation_evaluation.src.state_machine.test
    - python3 -m simulation.src.simulation_evaluation.src.referee.test

    # Test the urdf package
    - python3 simulation/utils/urdf/test/test_core.py

test-ros-packages:
  stage: test
  script:
    - cd simulation
    - catkin_make run_tests -j1
    - catkin_test_results  # Ensure that pipeline fails when test fails

test-documentation:
  stage: test
  variables:
    GIT_LFS_SKIP_SMUDGE: "0"  #  Pull git lfs
  script:
    # Test if the onboarding documentation is correct
    - python3 docs/content/tutorials/road_examples/example.py
    - cd docs
    - make doctest

######### Documentation ########

# Build the sphinx documentation
# If this is the master branch, the website deployer will also update doc.kitcar-team.de!
build-documentation:
  stage: deploy
  variables:
    GIT_LFS_SKIP_SMUDGE: "0"  #  Pull git lfs
  script:
    # Build the documentation
    - cd docs
    - make html
  artifacts: # Extract artifacts to view the documentation that has been generated
    paths:
      - docs/_build/html/*
    expire_in: 2 day

# Build and deploy the CI docker image to the gitlab registry
# This is done everytime the master branch is updated
deploy-ci-image:
  stage: deploy
  image: docker:19.03.11
  only:
    - master
  tags:
    - docker
  services:
    - docker:19.03.11-dind
  before_script: []
  script:
    - docker --version
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    # Test building the ci image
    - cd simulation/docker/ci
    - /bin/sh build.sh $CI_REGISTRY
    - docker push $CI_REGISTRY/kitcar/kitcar-gazebo-simulation/ci:focal
    # Test building the default image
    - cd ../default
    - /bin/sh build.sh $CI_REGISTRY ci $KITCAR_REPO_PATH
    - docker push $CI_REGISTRY/kitcar/kitcar-gazebo-simulation:ci
    - /bin/sh build.sh $CI_REGISTRY focal /home/kitcar/
    - docker push $CI_REGISTRY/kitcar/kitcar-gazebo-simulation:focal
    # Test building the kitcar_ros_ci image
    - cd ../kitcar_ros_ci
    - /bin/sh build.sh $CI_REGISTRY ci
    - docker push $CI_REGISTRY/kitcar/kitcar-gazebo-simulation/kitcar_ros_ci:focal
